---------------------------------- page 1 ----------------------------------
#### DownExpandingContainer('title')
  Paragraph('miniSQL Documentation', style='title page title')
       > (0,0,1,0,2) title page title
         (0,0,0,0,2) body
    SingleStyledText('miniSQL Documentation')
  Paragraph('Release 1.0.0', style='title page subtitle')
       > (0,0,1,0,2) title page subtitle
         (0,0,0,0,2) body
    SingleStyledText('Release 1.0.0')
  Paragraph('DevOpSec', style='title page author')
       > (0,0,1,0,2) title page author
         (0,0,0,0,2) body
    SingleStyledText('DevOpSec')
  Paragraph('May 21, 2019', style='title page date')
       > (0,0,1,0,2) title page date
         (0,0,0,0,2) body
    SingleStyledText('May 21, 2019')
---------------------------------- page i ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('Table of Contents', style='front matter section title')
       > (0,0,1,0,2) front matter section title
         (0,0,0,0,2) body
    Field('Table of Contents')
      SingleStyledText('Table of Contents')
#### ChainedContainer('column1')
  TableOfContentsSection(style='table of contents')
       > (0,0,1,0,1) table of contents section
         (0,0,0,1,1) chapter
    TableOfContents()   table of contents
         > (0,0,0,0,2) table of contents
      TableOfContentsEntry('1	Project Requirements	1')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('1	Project Requirements	1')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
            Tab('	')
            ReferenceField('Project Requirements')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Project Requirements')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.1	Summary	1')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.1	Summary	1')
            ReferenceField('1.1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.1')
            Tab('	')
            ReferenceField('Summary')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Summary')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.2	The records	1')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.2	The records	1')
            ReferenceField('1.2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.2')
            Tab('	')
            ReferenceField('The records')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('The records')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.3	The file	1')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.3	The file	1')
            ReferenceField('1.3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.3')
            Tab('	')
            ReferenceField('The file')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('The file')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.4	The Input	1')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.4	The Input	1')
            ReferenceField('1.4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.4')
            Tab('	')
            ReferenceField('The Input')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('The Input')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.5	The Output	2')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.5	The Output	2')
            ReferenceField('1.5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.5')
            Tab('	')
            ReferenceField('The Output')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('The Output')
            Tab('	')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
      TableOfContentsEntry('1.6	Deliverables	2')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.6	Deliverables	2')
            ReferenceField('1.6')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.6')
            Tab('	')
            ReferenceField('Deliverables')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Deliverables')
            Tab('	')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
      TableOfContentsEntry('1.7	Notes	2')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.7	Notes	2')
            ReferenceField('1.7')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.7')
            Tab('	')
            ReferenceField('Notes')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Notes')
            Tab('	')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
      TableOfContentsEntry('2	Database	3')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('2	Database	3')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
            Tab('	')
            ReferenceField('Database')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Database')
            Tab('	')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
      TableOfContentsEntry('2.1	Description	3')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.1	Description	3')
            ReferenceField('2.1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.1')
            Tab('	')
            ReferenceField('Description')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Description')
            Tab('	')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
      TableOfContentsEntry('2.2	Diagrams	4')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.2	Diagrams	4')
            ReferenceField('2.2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.2')
            Tab('	')
            ReferenceField('Diagrams')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Diagrams')
            Tab('	')
            ReferenceField('4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('4')
      TableOfContentsEntry('2.3	Mysql Schema	5')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.3	Mysql Schema	5')
            ReferenceField('2.3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.3')
            Tab('	')
            ReferenceField('Mysql Schema')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Mysql Schema')
            Tab('	')
            ReferenceField('5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('5')
      TableOfContentsEntry('2.4	Mysql Data	11')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.4	Mysql Data	11')
            ReferenceField('2.4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.4')
            Tab('	')
            ReferenceField('Mysql Data')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Mysql Data')
            Tab('	')
            ReferenceField('11')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('11')
      TableOfContentsEntry('3	Test Queries	13')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('3	Test Queries	13')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
            Tab('	')
            ReferenceField('Test Queries')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Test Queries')
            Tab('	')
            ReferenceField('13')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('13')
      TableOfContentsEntry('3.1	MySQL Input	13')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.1	MySQL Input	13')
            ReferenceField('3.1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.1')
            Tab('	')
            ReferenceField('MySQL Input')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('MySQL Input')
            Tab('	')
            ReferenceField('13')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('13')
      TableOfContentsEntry('3.2	MySQL Output	14')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.2	MySQL Output	14')
            ReferenceField('3.2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.2')
            Tab('	')
            ReferenceField('MySQL Output')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('MySQL Output')
            Tab('	')
            ReferenceField('14')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('14')
      TableOfContentsEntry('3.3	miniSQL Input	15')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.3	miniSQL Input	15')
            ReferenceField('3.3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.3')
            Tab('	')
            ReferenceField('miniSQL Input')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('miniSQL Input')
            Tab('	')
            ReferenceField('15')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('15')
      TableOfContentsEntry('3.4	miniSQL Output	15')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.4	miniSQL Output	15')
            ReferenceField('3.4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.4')
            Tab('	')
            ReferenceField('miniSQL Output')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('miniSQL Output')
            Tab('	')
            ReferenceField('15')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('15')
      TableOfContentsEntry('7	storage specification	25')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('7	storage specification	25')
            ReferenceField('7')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('7')
            Tab('	')
            ReferenceField('storage specification')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('storage specification')
            Tab('	')
            ReferenceField('25')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('25')
      TableOfContentsEntry('5	miniSQL module	19')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('5	miniSQL module	19')
            ReferenceField('5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('5')
            Tab('	')
            ReferenceField('miniSQL module')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('miniSQL module')
            Tab('	')
            ReferenceField('19')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      TableOfContentsEntry('6	settings module	23')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('6	settings module	23')
            ReferenceField('6')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('6')
            Tab('	')
            ReferenceField('settings module')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('settings module')
            Tab('	')
            ReferenceField('23')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      TableOfContentsEntry('7	storage specification	25')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('7	storage specification	25')
            ReferenceField('7')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('7')
            Tab('	')
            ReferenceField('storage specification')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('storage specification')
            Tab('	')
            ReferenceField('25')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('25')
      TableOfContentsEntry('8	Indices and tables	27')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('8	Indices and tables	27')
            ReferenceField('8')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('8')
            Tab('	')
            ReferenceField('Indices and tables')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Indices and tables')
            Tab('	')
            ReferenceField('27')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('27')
      TableOfContentsEntry('	Python Module Index	29')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('	Python Module Index	29')
            ReferenceField('')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('')
            Tab('	')
            ReferenceField('Python Module Index')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Python Module Index')
            Tab('	')
            ReferenceField('29')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('29')
      TableOfContentsEntry('	Index	31')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('	Index	31')
            ReferenceField('')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('')
            Tab('	')
            ReferenceField('Index')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Index')
            Tab('	')
            ReferenceField('31')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('31')
#### DownExpandingContainer('footer')
  Footer('		i')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		i')
      Tab('	')
      Tab('	')
      Field('i')
        SingleStyledText('i')
---------------------------------- page 1 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 1', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 1')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('1', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('1')
  Paragraph('Project Requirements', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Project Requirements')
      SingleStyledText('Project Requirements')
#### ChainedContainer('column1')
  DocumentTree()
    StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      StaticGroupedFlowables(id='%requirements')   None:None <start_of_file>
        Section(id='%requirements#project-requirements')   /home/anon/projects/minisql/docs/source/requirements.rst:3 <section>
             > (0,0,0,1,2) chapter
          Paragraph('This project was written as an e...')   /home/anon/projects/minisql/docs/source/requirements.rst:5 <paragraph>
               > (0,0,0,0,2) body
            MixedStyledText('This project was written as an e...')
              SingleStyledText('This project was written as an e...')
          Section(id='%requirements#summary')   /home/anon/projects/minisql/docs/source/requirements.rst:9 <section>
            Heading('1.1 Summary')   /home/anon/projects/minisql/docs/source/requirements.rst:9 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.1 Summary')
                  SingleStyledText('1.1')
                  SingleStyledText(' ')
                  SingleStyledText('Summary')
            Paragraph('For this assignment you will wri...')   /home/anon/projects/minisql/docs/source/requirements.rst:11 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('For this assignment you will wri...')
                SingleStyledText('For this assignment you will wri...')
          Section(id='%requirements#the-records')   /home/anon/projects/minisql/docs/source/requirements.rst:15 <section>
            Heading('1.2 The records')   /home/anon/projects/minisql/docs/source/requirements.rst:15 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.2 The records')
                  SingleStyledText('1.2')
                  SingleStyledText(' ')
                  SingleStyledText('The records')
            Paragraph('Each record will consist of a na...')   /home/anon/projects/minisql/docs/source/requirements.rst:17 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Each record will consist of a na...')
                SingleStyledText('Each record will consist of a na...')
          Section(id='%requirements#the-file')   /home/anon/projects/minisql/docs/source/requirements.rst:22 <section>
            Heading('1.3 The file')   /home/anon/projects/minisql/docs/source/requirements.rst:22 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.3 The file')
                  SingleStyledText('1.3')
                  SingleStyledText(' ')
                  SingleStyledText('The file')
            Paragraph('You will use block I/O to perfor...')   /home/anon/projects/minisql/docs/source/requirements.rst:24 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('You will use block I/O to perfor...')
                SingleStyledText('You will use block I/O to perfor...')
          Section(id='%requirements#the-input')   /home/anon/projects/minisql/docs/source/requirements.rst:30 <section>
            Heading('1.4 The Input')   /home/anon/projects/minisql/docs/source/requirements.rst:30 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.4 The Input')
                  SingleStyledText('1.4')
                  SingleStyledText(' ')
                  SingleStyledText('The Input')
            Paragraph('Input to your program will consi...')   /home/anon/projects/minisql/docs/source/requirements.rst:32 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Input to your program will consi...')
                SingleStyledText('Input to your program will consi...')
            Paragraph('*I record* – Insert record into ...')   /home/anon/projects/minisql/docs/source/requirements.rst:36 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('*I record* – Insert record into ...')
                MixedStyledText('*I record*', style='strong')   None:None <strong>
                     > (0,0,1,0,1) strong
                  SingleStyledText('*I record*')
                SingleStyledText(' – Insert record into the file, ...')
            Paragraph('*R name* – Retrieve the record h...')   /home/anon/projects/minisql/docs/source/requirements.rst:39 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('*R name* – Retrieve the record h...')
                MixedStyledText('*R name*', style='strong')   None:None <strong>
                     > (0,0,1,0,1) strong
                  SingleStyledText('*R name*')
                SingleStyledText(' – Retrieve the record having ke...')
            Paragraph('*D name* – Delete the record hav...')   /home/anon/projects/minisql/docs/source/requirements.rst:41 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('*D name* – Delete the record hav...')
                MixedStyledText('*D name*', style='strong')   None:None <strong>
                     > (0,0,1,0,1) strong
                  SingleStyledText('*D name*')
                SingleStyledText(' – Delete the record having key ...')
            Paragraph('*U name a-field name new-value*....')   /home/anon/projects/minisql/docs/source/requirements.rst:44 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('*U name a-field name new-value*....')
                MixedStyledText('*U name a-field name new-value*', style='strong')   None:None <strong>
                     > (0,0,1,0,1) strong
                  SingleStyledText('*U name a-field name new-value*')
                SingleStyledText('. Update the given record by fin...')
            Paragraph('In order to make the input easy ...')   /home/anon/projects/minisql/docs/source/requirements.rst:47 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('In order to make the input easy ...')
                SingleStyledText('In order to make the input easy ...')
            List(style='enumerated')   /home/anon/projects/minisql/docs/source/requirements.rst:49 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('1.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('1.')
                      SingleStyledText('1')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('The first character will begin i...')   /home/anon/projects/minisql/docs/source/requirements.rst:49 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('The first character will begin i...')
                      SingleStyledText('The first character will begin i...')
#### DownExpandingContainer('footer')
  Footer('		1')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		1')
      Tab('	')
      Tab('	')
      Field('1')
        SingleStyledText('1')
---------------------------------- page 2 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%requirements')   None:None <start_of_file>
        (continued) Section(id='%requirements#project-requirements')   /home/anon/projects/minisql/docs/source/requirements.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%requirements#the-input')   /home/anon/projects/minisql/docs/source/requirements.rst:30 <section>
            (continued) List(style='enumerated')   /home/anon/projects/minisql/docs/source/requirements.rst:49 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('2.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('2.')
                      SingleStyledText('2')
                      SingleStyledText('.')
                StaticGroupedFlowables()   None:None <list_item>
                     > (0,0,0,0,3) list item body
                  DefinitionList()   None:None <definition_list>
                       > (0,0,0,0,2) definition list
                    LabeledFlowable()   /home/anon/projects/minisql/docs/source/requirements.rst:52 <definition_list_item>
                         > (0,0,0,0,4) definition list item
                      StaticGroupedFlowables(style='definition term')
                           > (0,0,1,0,5) definition term
                        Paragraph('The elements of each type of inp...')
                             > (0,0,1,0,7) definition term paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('The elements of each type of inp...')   /home/anon/projects/minisql/docs/source/requirements.rst:52 <term>
                            SingleStyledText('The elements of each type of inp...')
                      StaticGroupedFlowables(style='definition')   None:None <definition>
                           > (0,0,1,0,5) definition
                        Paragraph('characters;')   /home/anon/projects/minisql/docs/source/requirements.rst:52 <paragraph>
                             > (0,0,1,0,7) definition paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('characters;')
                            SingleStyledText('characters;')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('3.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('3.')
                      SingleStyledText('3')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('The name field will contain no t...')   /home/anon/projects/minisql/docs/source/requirements.rst:54 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('The name field will contain no t...')
                      SingleStyledText('The name field will contain no t...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('4.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('4.')
                      SingleStyledText('4')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('A new line will immediately foll...')   /home/anon/projects/minisql/docs/source/requirements.rst:56 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('A new line will immediately foll...')
                      SingleStyledText('A new line will immediately foll...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('5.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('5.')
                      SingleStyledText('5')
                      SingleStyledText('.')
                StaticGroupedFlowables()   None:None <list_item>
                     > (0,0,0,0,3) list item body
                  DefinitionList()   None:None <definition_list>
                       > (0,0,0,0,2) definition list
                    LabeledFlowable()   /home/anon/projects/minisql/docs/source/requirements.rst:59 <definition_list_item>
                         > (0,0,0,0,4) definition list item
                      StaticGroupedFlowables(style='definition term')
                           > (0,0,1,0,5) definition term
                        Paragraph('All input is guaranteed to be co...')
                             > (0,0,1,0,7) definition term paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('All input is guaranteed to be co...')   /home/anon/projects/minisql/docs/source/requirements.rst:59 <term>
                            SingleStyledText('All input is guaranteed to be co...')
                      StaticGroupedFlowables(style='definition')   None:None <definition>
                           > (0,0,1,0,5) definition
                        Paragraph('performed.')   /home/anon/projects/minisql/docs/source/requirements.rst:59 <paragraph>
                             > (0,0,1,0,7) definition paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('performed.')
                            SingleStyledText('performed.')
          Section(id='%requirements#the-output')   /home/anon/projects/minisql/docs/source/requirements.rst:62 <section>
            Heading('1.5 The Output')   /home/anon/projects/minisql/docs/source/requirements.rst:62 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.5 The Output')
                  SingleStyledText('1.5')
                  SingleStyledText(' ')
                  SingleStyledText('The Output')
            Paragraph('This program will be fully self-...')   /home/anon/projects/minisql/docs/source/requirements.rst:64 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('This program will be fully self-...')
                SingleStyledText('This program will be fully self-...')
          Section(id='%requirements#deliverables')   /home/anon/projects/minisql/docs/source/requirements.rst:70 <section>
            Heading('1.6 Deliverables')   /home/anon/projects/minisql/docs/source/requirements.rst:70 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.6 Deliverables')
                  SingleStyledText('1.6')
                  SingleStyledText(' ')
                  SingleStyledText('Deliverables')
            List(style='enumerated')   /home/anon/projects/minisql/docs/source/requirements.rst:72 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('1.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('1.')
                      SingleStyledText('1')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('A Database using MySQL and an co...')   /home/anon/projects/minisql/docs/source/requirements.rst:72 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('A Database using MySQL and an co...')
                      SingleStyledText('A Database using MySQL and an co...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('2.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('2.')
                      SingleStyledText('2')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('A new DBMS system to fully reali...')   /home/anon/projects/minisql/docs/source/requirements.rst:74 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('A new DBMS system to fully reali...')
                      SingleStyledText('A new DBMS system to fully reali...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('3.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('3.')
                      SingleStyledText('3')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('An interface to your DBMS system...')   /home/anon/projects/minisql/docs/source/requirements.rst:76 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('An interface to your DBMS system...')
                      SingleStyledText('An interface to your DBMS system...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('4.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('4.')
                      SingleStyledText('4')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Complete, professionally written...')   /home/anon/projects/minisql/docs/source/requirements.rst:78 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Complete, professionally written...')
                      SingleStyledText('Complete, professionally written...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('5.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('5.')
                      SingleStyledText('5')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Test input files and commands.')   /home/anon/projects/minisql/docs/source/requirements.rst:80 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Test input files and commands.')
                      SingleStyledText('Test input files and commands.')
          Section(id='%requirements#notes')   /home/anon/projects/minisql/docs/source/requirements.rst:83 <section>
            Heading('1.7 Notes')   /home/anon/projects/minisql/docs/source/requirements.rst:83 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.7 Notes')
                  SingleStyledText('1.7')
                  SingleStyledText(' ')
                  SingleStyledText('Notes')
            List(style='enumerated')   /home/anon/projects/minisql/docs/source/requirements.rst:85 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('1.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('1.')
                      SingleStyledText('1')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Be sure to include identificatio...')   /home/anon/projects/minisql/docs/source/requirements.rst:85 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Be sure to include identificatio...')
                      SingleStyledText('Be sure to include identificatio...')
            Paragraph('2. The program will be tested by...')   /home/anon/projects/minisql/docs/source/requirements.rst:87 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('2. The program will be tested by...')
                SingleStyledText('2. The program will be tested by...')
            Paragraph('3. In general, your code should ...')   /home/anon/projects/minisql/docs/source/requirements.rst:90 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('3. In general, your code should ...')
                SingleStyledText('3. In general, your code should ...')
            List(style='enumerated')   /home/anon/projects/minisql/docs/source/requirements.rst:94 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('1.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('1.')
                      SingleStyledText('1')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/requirements.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Include test output as well.')   /home/anon/projects/minisql/docs/source/requirements.rst:94 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Include test output as well.')
                      SingleStyledText('Include test output as well.')
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('2		Chapter 1.  Project Requireme...')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2		Chapter 1.  Project Requireme...')
      Field('2')
        SingleStyledText('2')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('1')
        SingleStyledText('1')
      SingleStyledText('.  ')
      Field('Project Requirements')
        SingleStyledText('Project Requirements')
---------------------------------- page 3 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 2', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 2')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('2', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('2')
  Paragraph('Database', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Database')
      SingleStyledText('Database')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          Section(id='%database_description#description')   /home/anon/projects/minisql/docs/source/database_description.rst:6 <section>
            Heading('2.1 Description')   /home/anon/projects/minisql/docs/source/database_description.rst:6 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.1 Description')
                  SingleStyledText('2.1')
                  SingleStyledText(' ')
                  SingleStyledText('Description')
            Paragraph('description.pdf')   /home/anon/projects/minisql/docs/source/database_description.rst:8 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('description.pdf')
                AnnotatedText('description.pdf', style='external link')   None:None <reference>
                     > (0,0,1,0,1) external hyperlink
                  MixedStyledText('description.pdf')
                    SingleStyledText('description.pdf')
                AnnotatedText('')   None:None <target>
                  MixedStyledText('')
#### DownExpandingContainer('footer')
  Footer('		3')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		3')
      Tab('	')
      Tab('	')
      Field('3')
        SingleStyledText('3')
---------------------------------- page 4 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          Section(id='%database_description#diagrams')   /home/anon/projects/minisql/docs/source/database_description.rst:11 <section>
            Heading('2.2 Diagrams')   /home/anon/projects/minisql/docs/source/database_description.rst:11 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.2 Diagrams')
                  SingleStyledText('2.2')
                  SingleStyledText(' ')
                  SingleStyledText('Diagrams')
            Figure()   /home/anon/projects/minisql/docs/source/database_description.rst:14 <figure>
                 > (0,0,0,0,2) figure
              Image('../../database/diagrams/EER-diagram.png')   /home/anon/projects/minisql/docs/source/database_description.rst:14 <image>
                   > (0,0,0,0,2) image
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('4		Chapter 2.  Database')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('4		Chapter 2.  Database')
      Field('4')
        SingleStyledText('4')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('2')
        SingleStyledText('2')
      SingleStyledText('.  ')
      Field('Database')
        SingleStyledText('Database')
---------------------------------- page 5 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            Heading('2.3 Mysql Schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
            CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('DROP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATABASE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('IF', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('EXISTS', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('global_insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CREATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATABASE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('global_insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('USE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('global_insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DROP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('IF', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('EXISTS', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CREATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('AUTO_INCREMENT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('apartment', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('''', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('street', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('city', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('state', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('country', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('zipcode', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('creation_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATETIME', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('modification_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATETIME', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('ON', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('UPDATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('PRIMARY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DROP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('IF', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('EXISTS', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CREATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('AUTO_INCREMENT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('name', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('email', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('phone', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('salary', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('10', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('0', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('commision', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('float', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('5', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('4', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('0.00', type=Token.Literal.Number.Float)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('creation_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATETIME', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('modification_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATETIME', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('ON', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('UPDATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('PRIMARY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token('),', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CONSTRAINT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('FOREIGN', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('REFERENCES', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DROP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('IF', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('EXISTS', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CREATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('AUTO_INCREMENT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('name', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('email', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('phone', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('dob', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('sex', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('VARCHAR', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('255', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('male', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('female', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('other', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('creation_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATETIME', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('modification_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DATETIME', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('ON', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('UPDATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CURRENT_TIMESTAMP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('PRIMARY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token('),', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CONSTRAINT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('FOREIGN', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('REFERENCES', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('DROP', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('IF', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('EXISTS', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_records', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CREATE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('TABLE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_records', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('INT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NOT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('NULL', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('PRIMARY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('),', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('CONSTRAINT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('FOREIGN', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('KEY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('REFERENCES', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token('),', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('		miniSQL Documentation, Release...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		miniSQL Documentation, Release...')
      Tab('	')
      Tab('	')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('2.3.  Mysql Schema		5')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2.3.  Mysql Schema		5')
      Field('2.3')
        SingleStyledText('2.3')
      SingleStyledText('.  ')
      Field('Mysql Schema')
        SingleStyledText('Mysql Schema')
      Tab('	')
      Tab('	')
      Field('5')
        SingleStyledText('5')
---------------------------------- page 6 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            (continued) CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('6		Chapter 2.  Database')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('6		Chapter 2.  Database')
      Field('6')
        SingleStyledText('6')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('2')
        SingleStyledText('2')
      SingleStyledText('.  ')
      Field('Database')
        SingleStyledText('Database')
---------------------------------- page 7 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            (continued) CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('		miniSQL Documentation, Release...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		miniSQL Documentation, Release...')
      Tab('	')
      Tab('	')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('2.3.  Mysql Schema		7')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2.3.  Mysql Schema		7')
      Field('2.3')
        SingleStyledText('2.3')
      SingleStyledText('.  ')
      Field('Mysql Schema')
        SingleStyledText('Mysql Schema')
      Tab('	')
      Tab('	')
      Field('7')
        SingleStyledText('7')
---------------------------------- page 8 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            (continued) CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('8		Chapter 2.  Database')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('8		Chapter 2.  Database')
      Field('8')
        SingleStyledText('8')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('2')
        SingleStyledText('2')
      SingleStyledText('.  ')
      Field('Database')
        SingleStyledText('Database')
---------------------------------- page 9 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            (continued) CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('		miniSQL Documentation, Release...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		miniSQL Documentation, Release...')
      Tab('	')
      Tab('	')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('2.3.  Mysql Schema		9')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2.3.  Mysql Schema		9')
      Field('2.3')
        SingleStyledText('2.3')
      SingleStyledText('.  ')
      Field('Mysql Schema')
        SingleStyledText('Mysql Schema')
      Tab('	')
      Tab('	')
      Field('9')
        SingleStyledText('9')
---------------------------------- page 10 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            (continued) CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('10		Chapter 2.  Database')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('10		Chapter 2.  Database')
      Field('10')
        SingleStyledText('10')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('2')
        SingleStyledText('2')
      SingleStyledText('.  ')
      Field('Database')
        SingleStyledText('Database')
---------------------------------- page 11 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-schema')   /home/anon/projects/minisql/docs/source/database_description.rst:16 <section>
            (continued) CodeBlock('DROP DATABASE IF EXISTS global_i...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
          Section(id='%database_description#mysql-data')   /home/anon/projects/minisql/docs/source/database_description.rst:22 <section>
            Heading('2.4 Mysql Data')   /home/anon/projects/minisql/docs/source/database_description.rst:22 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.4 Mysql Data')
                  SingleStyledText('2.4')
                  SingleStyledText(' ')
                  SingleStyledText('Mysql Data')
            CodeBlock('use global_insurance;\n\n-- create...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('use', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('global_insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('create', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('example', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('data', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('values', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''1234 fake st.'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''detroit'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''mi'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''united states'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''00000'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('values', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''1234 fake rd.'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''flint'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''mi'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''united states'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''00000'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('values', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''1234 fake blvd.'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''grand rapids'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''mi'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''united states'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''00000'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('values', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''1234 fake circle.'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''lansing'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''mi'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''united states'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''00000'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('values', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''1234 faker st.'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''detroit'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''mi'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''united states'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''00000'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('values', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''1234 fakest st.'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''detroit'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''mi'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''united states'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(''00000'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('DEFAULT', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(');', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('		miniSQL Documentation, Release...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		miniSQL Documentation, Release...')
      Tab('	')
      Tab('	')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('2.4.  Mysql Data		11')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2.4.  Mysql Data		11')
      Field('2.4')
        SingleStyledText('2.4')
      SingleStyledText('.  ')
      Field('Mysql Data')
        SingleStyledText('Mysql Data')
      Tab('	')
      Tab('	')
      Field('11')
        SingleStyledText('11')
---------------------------------- page 12 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%database_description')   None:None <start_of_file>
        (continued) Section(id='%database_description#database')   /home/anon/projects/minisql/docs/source/database_description.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%database_description#mysql-data')   /home/anon/projects/minisql/docs/source/database_description.rst:22 <section>
            (continued) CodeBlock('use global_insurance;\n\n-- create...')   /home/anon/projects/minisql/docs/source/database_description.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('12		Chapter 2.  Database')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('12		Chapter 2.  Database')
      Field('12')
        SingleStyledText('12')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('2')
        SingleStyledText('2')
      SingleStyledText('.  ')
      Field('Database')
        SingleStyledText('Database')
---------------------------------- page 13 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 3', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 3')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('3', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('3')
  Paragraph('Test Queries', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Test Queries')
      SingleStyledText('Test Queries')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      StaticGroupedFlowables(id='%test_input')   None:None <start_of_file>
        Section(id='%test_input#test-queries')   /home/anon/projects/minisql/docs/source/test_input.rst:3 <section>
             > (0,0,0,1,2) chapter
          Section(id='%test_input#mysql-input')   /home/anon/projects/minisql/docs/source/test_input.rst:6 <section>
            Heading('3.1 MySQL Input')   /home/anon/projects/minisql/docs/source/test_input.rst:6 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.1 MySQL Input')
                  SingleStyledText('3.1')
                  SingleStyledText(' ')
                  SingleStyledText('MySQL Input')
            CodeBlock('use global_insurance;\n\n-- |=====...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('use', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('global_insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|==========', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('get', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('records', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('==========|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('*', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('from', type=Token.Keyword.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Name.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_records', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('and', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|==========', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('get', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('managing', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('each', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('policy', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('==========|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('name', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('agent_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Home Insurance Agent'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('name', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('agent_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Auto Insurance Agent'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('name', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('agent_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Life Insurance Agent'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('from', type=Token.Keyword.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('home_insurance_policy', type=Token.Name.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Name.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('auto_insurance_policy', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('life_insurance_policy', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('or', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('or', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('==========', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('get', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('total', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('amount', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('an', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('company', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('==========|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('dwelling_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('liability_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('personal_property_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('living_expense_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('))', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Home Insurance Coverage'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('coverage_amount', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('liability_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('uninsured_motorists_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('medical_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('personal_injury_coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('))', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Auto Insurance Coverage'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('SUM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('t3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Life Insurance Coverage'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('from', type=Token.Keyword.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('home_insurance_policy', type=Token.Name.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Name.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('auto_insurance_policy', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('life_insurance_policy', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insurance_company', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('insurance_company_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('or', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('insurance_company_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('or', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('t3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('insurance_company_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|==========', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('show', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('sales', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('arya', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('stark', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('==========|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('*', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('from', type=Token.Keyword.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('sales', type=Token.Name.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Name.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('agent_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('"', type=Token.Literal.String.Double)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Double
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|==========', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('show', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('premiums', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('==========|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('select', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('policy_type', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Insurance Type'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('amount_due', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('as', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Amount Due'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('from', type=Token.Keyword.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('premium', type=Token.Name.Namespace)
                   > (0,0,0,1,2) (pygments)Token.Name.Namespace
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('where', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### DownExpandingContainer('footer')
  Footer('		13')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		13')
      Tab('	')
      Tab('	')
      Field('13')
        SingleStyledText('13')
---------------------------------- page 14 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%test_input')   None:None <start_of_file>
        (continued) Section(id='%test_input#test-queries')   /home/anon/projects/minisql/docs/source/test_input.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%test_input#mysql-input')   /home/anon/projects/minisql/docs/source/test_input.rst:6 <section>
            (continued) CodeBlock('use global_insurance;\n\n-- |=====...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
          Section(id='%test_input#mysql-output')   /home/anon/projects/minisql/docs/source/test_input.rst:12 <section>
            Heading('3.2 MySQL Output')   /home/anon/projects/minisql/docs/source/test_input.rst:12 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.2 MySQL Output')
                  SingleStyledText('3.2')
                  SingleStyledText(' ')
                  SingleStyledText('MySQL Output')
            CodeBlock('+----+-----------+--------------...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('+----+-----------+--------------...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('apartment', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('street', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('city', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('state', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('country', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('       ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('zipcode', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('creation_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('       ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('modification_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----+-----------+--------------...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1234', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('fake', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('st', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('detroit', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('mi', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('united', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('states', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('00000', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('5', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1234', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('faker', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('st', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('detroit', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('mi', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('united', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('states', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('00000', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('5', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('6', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1234', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('fakest', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('st', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('detroit', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('mi', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('united', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('states', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('00000', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('6', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----+-----------+--------------...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------------+--------...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Home', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Auto', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Life', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Agent', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------------+--------...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('arya', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('stark', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('arya', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('stark', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('arya', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('stark', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------------+--------...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+-------------------------+-----...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Home', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Auto', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Life', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Coverage', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+-------------------------+-----...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('                  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('450000', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('              ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1000334000', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('                  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('400000', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+-------------------------+-----...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----+-------------+----------+-...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('id', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('customer_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('agent_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('premium_id', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('type', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('creation_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('       ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('modification_time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----+-------------+----------+-...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('        ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('home', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('        ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('auto', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('3', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('        ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('3', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('life', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2019', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('05', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('18', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('26', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('30', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----+-------------+----------+-...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------+------------+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Insurance', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Type', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Amount', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Due', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------+------------+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('home', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('        ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('110', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('auto', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2823141', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('life', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('           ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('        ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('127', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------+------------+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('+----------------+------------+', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('14		Chapter 3.  Test Queries')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('14		Chapter 3.  Test Queries')
      Field('14')
        SingleStyledText('14')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('3')
      SingleStyledText('.  ')
      Field('Test Queries')
        SingleStyledText('Test Queries')
---------------------------------- page 15 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%test_input')   None:None <start_of_file>
        (continued) Section(id='%test_input#test-queries')   /home/anon/projects/minisql/docs/source/test_input.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%test_input#mysql-output')   /home/anon/projects/minisql/docs/source/test_input.rst:12 <section>
            (continued) CodeBlock('+----+-----------+--------------...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
          Section(id='%test_input#minisql-input')   /home/anon/projects/minisql/docs/source/test_input.rst:18 <section>
            Heading('3.3 miniSQL Input')   /home/anon/projects/minisql/docs/source/test_input.rst:18 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.3 miniSQL Input')
                  SingleStyledText('3.3')
                  SingleStyledText(' ')
                  SingleStyledText('miniSQL Input')
            CodeBlock('insert test_scores 94 76 82 79;\n...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('94', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('76', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('82', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('79', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('update', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('90', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('update', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('96', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('78', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('84', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('81', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('delete', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_scores', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('primes1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('3', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('5', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('7', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('primes2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('11', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('13', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('17', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('19', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('primes3', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('23', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('31', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('37', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('primes4', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('41', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('43', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('47', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('53', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('*', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('delete', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('primes1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('*', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('delete', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('*', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('*', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('retrieve', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('not_here', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('delete', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('not_here', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('insert', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('bad_query', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('update', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('bad', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('query', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
          Section(id='%test_input#minisql-output')   /home/anon/projects/minisql/docs/source/test_input.rst:24 <section>
            Heading('3.4 miniSQL Output')   /home/anon/projects/minisql/docs/source/test_input.rst:24 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.4 miniSQL Output')
                  SingleStyledText('3.4')
                  SingleStyledText(' ')
                  SingleStyledText('miniSQL Output')
            CodeBlock('Query successful! Record created...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              SingleStyledText('Query successful! Record created...')
#### UpExpandingContainer('header')
  Header('		miniSQL Documentation, Release...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		miniSQL Documentation, Release...')
      Tab('	')
      Tab('	')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('3.3.  miniSQL Input		15')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('3.3.  miniSQL Input		15')
      Field('3.3')
        SingleStyledText('3.3')
      SingleStyledText('.  ')
      Field('miniSQL Input')
        SingleStyledText('miniSQL Input')
      Tab('	')
      Tab('	')
      Field('15')
        SingleStyledText('15')
---------------------------------- page 16 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%test_input')   None:None <start_of_file>
        (continued) Section(id='%test_input#test-queries')   /home/anon/projects/minisql/docs/source/test_input.rst:3 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%test_input#minisql-output')   /home/anon/projects/minisql/docs/source/test_input.rst:24 <section>
            (continued) CodeBlock('Query successful! Record created...')   /home/anon/projects/minisql/docs/source/test_input.rst:1 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('16		Chapter 3.  Test Queries')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('16		Chapter 3.  Test Queries')
      Field('16')
        SingleStyledText('16')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('3')
      SingleStyledText('.  ')
      Field('Test Queries')
        SingleStyledText('Test Queries')
---------------------------------- page 17 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 3', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 3')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('3', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('7')
  Paragraph('Test Queries', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Test Queries')
      SingleStyledText('storage specification')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables(id='mastertoc')   /home/anon/projects/minisql/docs/source/index.rst:0 <compound>
      StaticGroupedFlowables(id='%storage_format')   None:None <start_of_file>
        Section(id='%storage_format#storage-specification')   /home/anon/projects/minisql/docs/source/storage_format.rst:3 <section>
             > (0,0,0,1,2) chapter
          Paragraph('Records are stored in a database...')   /home/anon/projects/minisql/docs/source/storage_format.rst:5 <paragraph>
               > (0,0,0,0,2) body
            MixedStyledText('Records are stored in a database...')
              SingleStyledText('Records are stored in a database...')
          Paragraph('record storage format:')   /home/anon/projects/minisql/docs/source/storage_format.rst:7 <paragraph>
               > (0,0,0,0,2) body
            MixedStyledText('record storage format:')
              SingleStyledText('record storage format:')
          CodeBlock('<record_name>\t<a1>\t<a2>\t<a3>\...')   /home/anon/projects/minisql/docs/source/storage_format.rst:10 <literal_block>
               > (1,0,0,0,2) code block
                 (0,0,0,0,1) body
            Token('<', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('record_name', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('>', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('\', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
            Token('t', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('<', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('a1', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('>', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('\', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
            Token('t', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('<', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('a2', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('>', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('\', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
            Token('t', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('<', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('a3', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('>', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('\', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
            Token('t', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('<', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('a4', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('>', type=Token.Operator)
                 > (0,0,0,1,2) (pygments)Token.Operator
            Token('\', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
            Token('r', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('\', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
            Token('n', type=Token.Name)
                 > (0,0,0,1,2) (pygments)Token.Name
            Token('\n', type=Token.Text)
                 > (0,0,0,1,2) (pygments)Token.Text
          Paragraph('miniSQL data constraints:')   /home/anon/projects/minisql/docs/source/storage_format.rst:12 <paragraph>
               > (0,0,0,0,2) body
            MixedStyledText('miniSQL data constraints:')
              SingleStyledText('miniSQL data constraints:')
          Table()   /home/anon/projects/minisql/docs/source/storage_format.rst:None <table>
               > (0,0,0,0,2) table
            TableHead()
              TableRow()
                TableCell()   None:None <entry>
                     x (0,0,0,0,8) table head cell
                     > (0,0,0,0,7) table cell
                  Paragraph('storage type')   /home/anon/projects/minisql/docs/source/storage_format.rst:15 <paragraph>
                       > (0,0,0,0,10) table head cell paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('storage type')
                      SingleStyledText('storage type')
                  TableCellBackground()
                TableCell()   None:None <entry>
                     x (0,0,0,0,8) table head cell
                     > (0,0,0,0,7) table cell
                  Paragraph('data type')   /home/anon/projects/minisql/docs/source/storage_format.rst:15 <paragraph>
                       > (0,0,0,0,10) table head cell paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('data type')
                      SingleStyledText('data type')
                  TableCellBackground()
                TableCell()   None:None <entry>
                     x (0,0,0,0,8) table head cell
                     > (0,0,0,0,7) table cell
                  Paragraph('size')   /home/anon/projects/minisql/docs/source/storage_format.rst:15 <paragraph>
                       > (0,0,0,0,10) table head cell paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('size')
                      SingleStyledText('size')
                  TableCellBackground()
            TableBody()
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('field name')   /home/anon/projects/minisql/docs/source/storage_format.rst:17 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('field name')
                      SingleStyledText('field name')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('string')   /home/anon/projects/minisql/docs/source/storage_format.rst:17 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('string')
                      SingleStyledText('string')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('18 B')   /home/anon/projects/minisql/docs/source/storage_format.rst:17 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('18 B')
                      SingleStyledText('18 B')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('field data')   /home/anon/projects/minisql/docs/source/storage_format.rst:19 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('field data')
                      SingleStyledText('field data')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('unsigned integer')   /home/anon/projects/minisql/docs/source/storage_format.rst:19 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('unsigned integer')
                      SingleStyledText('unsigned integer')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('4 B * 4')   /home/anon/projects/minisql/docs/source/storage_format.rst:19 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('4 B * 4')
                      SingleStyledText('4 B * 4')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('tab char')   /home/anon/projects/minisql/docs/source/storage_format.rst:21 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('tab char')
                      SingleStyledText('tab char')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('char')   /home/anon/projects/minisql/docs/source/storage_format.rst:21 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('char')
                      SingleStyledText('char')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('1 B * 4')   /home/anon/projects/minisql/docs/source/storage_format.rst:21 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('1 B * 4')
                      SingleStyledText('1 B * 4')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('CRLF string')   /home/anon/projects/minisql/docs/source/storage_format.rst:23 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('CRLF string')
                      SingleStyledText('CRLF string')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('char')   /home/anon/projects/minisql/docs/source/storage_format.rst:23 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('char')
                      SingleStyledText('char')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('2 B')   /home/anon/projects/minisql/docs/source/storage_format.rst:23 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('2 B')
                      SingleStyledText('2 B')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('total record size')   /home/anon/projects/minisql/docs/source/storage_format.rst:25 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('total record size')
                      SingleStyledText('total record size')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('40 B')   /home/anon/projects/minisql/docs/source/storage_format.rst:25 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('40 B')
                      SingleStyledText('40 B')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
#### DownExpandingContainer('footer')
  Footer('		17')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		17')
      Tab('	')
      Tab('	')
      Field('17')
        SingleStyledText('17')
---------------------------------- page 18 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('18		Chapter 3.  Test Queries')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('18		Chapter 3.  Test Queries')
      Field('18')
        SingleStyledText('18')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('7')
      SingleStyledText('.  ')
      Field('Test Queries')
        SingleStyledText('storage specification')
---------------------------------- page 19 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 3', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 3')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('3', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('5')
  Paragraph('Test Queries', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Test Queries')
      SingleStyledText('miniSQL module')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    Section(id='%storage_format#minisql-module')   /home/anon/projects/minisql/docs/source/index.rst:20 <section>
         > (0,0,0,1,2) chapter
      LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('class minisql.MiniDB', id='%storage_format#minisql.MiniDB')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:None <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('class minisql.MiniDB')
              MixedStyledText('class ', style='annotation')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:None <desc_annotation>
                   > (0,0,3,0,6) object annotation
                SingleStyledText('class ')
              MixedStyledText('minisql.', style='additional name part')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:None <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('minisql.')
              MixedStyledText('MiniDB', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:None <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('MiniDB')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:None <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('Access to DB, lower level storag...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:1 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Access to DB, lower level storag...')
              SingleStyledText('Access to DB, lower level storag...')
          LabeledFlowable(style='object description')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.close:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('close (  ) ', id='%storage_format#minisql.MiniDB.close')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.close:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('close (  ) ')
                  MixedStyledText('close', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.close:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('close')
                  MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.close:None <desc_parameterlist>
                    MixedStyledText(' ( ')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.close:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Close database connection and cl...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.close:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Close database connection and cl...')
                  SingleStyledText('Close database connection and cl...')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('createRecord ( name, a1, a2, a3,...', id='%storage_format#minisql.MiniDB.createRecord')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('createRecord ( name, a1, a2, a3,...')
                  MixedStyledText('createRecord', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('createRecord')
                  MixedStyledText(' ( name, a1, a2, a3, a4 ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:None <desc_parameterlist>
                    MixedStyledText(' ( name, a1, a2, a3, a4')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('name, a1, a2, a3, a4', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('name', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('name')
                        SingleStyledText(', ')
                        MixedStyledText('a1', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a1')
                        SingleStyledText(', ')
                        MixedStyledText('a2', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a2')
                        SingleStyledText(', ')
                        MixedStyledText('a3', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a3')
                        SingleStyledText(', ')
                        MixedStyledText('a4', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a4')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Create a record in the database')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Create a record in the database')
                  SingleStyledText('Create a record in the database')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    List(style='bulleted')   None:None <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('name (str) – record name')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('name (str) – record name')
                              MixedStyledText('name', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('name')
                              SingleStyledText(' (')
                              AnnotatedText('str', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('str')
                                  MixedStyledText('str', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('str')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('record name')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a1 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a1 (int) – field data')
                              MixedStyledText('a1', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a1')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a2 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a2 (int) – field data')
                              MixedStyledText('a2', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a2')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a3 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a3 (int) – field data')
                              MixedStyledText('a3', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a3')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a4 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a4 (int) – field data')
                              MixedStyledText('a4', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a4')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.createRecord:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('True | False')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('True | False')
                        SingleStyledText('True | False')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('deleteRecord ( name ) ', id='%storage_format#minisql.MiniDB.deleteRecord')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('deleteRecord ( name ) ')
                  MixedStyledText('deleteRecord', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('deleteRecord')
                  MixedStyledText(' ( name ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:None <desc_parameterlist>
                    MixedStyledText(' ( name')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('name', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('name', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('name')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Delete a record from the databas...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Delete a record from the databas...')
                  SingleStyledText('Delete a record from the databas...')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('name (str) – record to delete')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('name (str) – record to delete')
                        MixedStyledText('name', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('name')
                        SingleStyledText(' (')
                        AnnotatedText('str', style='external link')   None:None <reference>
                             > (0,0,1,0,1) external hyperlink
                          MixedStyledText('str')
                            MixedStyledText('str', style='literal emphasis')   None:None <literal_emphasis>
                                 > (0,0,1,0,1) literal emphasis
                              SingleStyledText('str')
                        SingleStyledText(')')
                        SingleStyledText(' – ')
                        SingleStyledText('record to delete')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecord:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('True | False')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('True | False')
                        SingleStyledText('True | False')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('deleteRecords (  ) ', id='%storage_format#minisql.MiniDB.deleteRecords')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecords:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('deleteRecords (  ) ')
                  MixedStyledText('deleteRecords', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecords:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('deleteRecords')
                  MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecords:None <desc_parameterlist>
                    MixedStyledText(' ( ')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecords:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Delete all records from the data...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecords:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Delete all records from the data...')
                  SingleStyledText('Delete all records from the data...')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.deleteRecords:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('True | False')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('True | False')
                        SingleStyledText('True | False')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('getRecord ( name ) ', id='%storage_format#minisql.MiniDB.getRecord')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('getRecord ( name ) ')
                  MixedStyledText('getRecord', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('getRecord')
                  MixedStyledText(' ( name ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:None <desc_parameterlist>
                    MixedStyledText(' ( name')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('name', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('name', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('name')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Get record from database')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Get record from database')
                  SingleStyledText('Get record from database')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('name (str) – record name')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('name (str) – record name')
                        MixedStyledText('name', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('name')
                        SingleStyledText(' (')
                        AnnotatedText('str', style='external link')   None:None <reference>
                             > (0,0,1,0,1) external hyperlink
                          MixedStyledText('str')
                            MixedStyledText('str', style='literal emphasis')   None:None <literal_emphasis>
                                 > (0,0,1,0,1) literal emphasis
                              SingleStyledText('str')
                        SingleStyledText(')')
                        SingleStyledText(' – ')
                        SingleStyledText('record name')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecord:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('tuple(<name>, <a1>, <a2>, <a3>, ...')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('tuple(<name>, <a1>, <a2>, <a3>, ...')
                        SingleStyledText('tuple(<name>, <a1>, <a2>, <a3>, ...')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('getRecords (  ) ', id='%storage_format#minisql.MiniDB.getRecords')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('getRecords (  ) ')
                  MixedStyledText('getRecords', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('getRecords')
                  MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:None <desc_parameterlist>
                    MixedStyledText(' ( ')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Get aal records from database')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Get aal records from database')
                  SingleStyledText('Get aal records from database')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('name (str) – record name')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('name (str) – record name')
                        MixedStyledText('name', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('name')
                        SingleStyledText(' (')
                        AnnotatedText('str', style='external link')   None:None <reference>
                             > (0,0,1,0,1) external hyperlink
                          MixedStyledText('str')
                            MixedStyledText('str', style='literal emphasis')   None:None <literal_emphasis>
                                 > (0,0,1,0,1) literal emphasis
                              SingleStyledText('str')
                        SingleStyledText(')')
                        SingleStyledText(' – ')
                        SingleStyledText('record name')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.getRecords:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('list(tuple(<name>, <a1>, <a2>, <...')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('list(tuple(<name>, <a1>, <a2>, <...')
                        SingleStyledText('list(tuple(<name>, <a1>, <a2>, <...')
#### DownExpandingContainer('footer')
  Footer('		19')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		19')
      Tab('	')
      Tab('	')
      Field('19')
        SingleStyledText('19')
---------------------------------- page 20 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) Section(id='%storage_format#minisql-module')   /home/anon/projects/minisql/docs/source/index.rst:20 <section>
         > (0,0,0,1,2) chapter
      (continued) LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        (continued) StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB:None <desc_content>
             > (0,0,2,0,3) object description content
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('interpretQueries ( queries ) ', id='%storage_format#minisql.MiniDB.interpretQueries')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('interpretQueries ( queries ) ')
                  MixedStyledText('interpretQueries', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('interpretQueries')
                  MixedStyledText(' ( queries ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:None <desc_parameterlist>
                    MixedStyledText(' ( queries')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('queries', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('queries', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('queries')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Interpret queries as a list of c...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Interpret queries as a list of c...')
                  SingleStyledText('Interpret queries as a list of c...')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('queries – list of queries to pro...')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('queries – list of queries to pro...')
                        MixedStyledText('queries', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('queries')
                        SingleStyledText(' – ')
                        SingleStyledText('list of queries to process')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.interpretQueries:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('False to exit, True to continue ...')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('False to exit, True to continue ...')
                        SingleStyledText('False to exit, True to continue ...')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('parseQueries ( raw_queries ) ', id='%storage_format#minisql.MiniDB.parseQueries')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('parseQueries ( raw_queries ) ')
                  MixedStyledText('parseQueries', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('parseQueries')
                  MixedStyledText(' ( raw_queries ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:None <desc_parameterlist>
                    MixedStyledText(' ( raw_queries')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('raw_queries', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('raw_queries', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('raw_queries')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Parse input into interpretable q...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Parse input into interpretable q...')
                  SingleStyledText('Parse input into interpretable q...')
              Paragraph('Queries are delimited by a semic...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:3 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Queries are delimited by a semic...')
                  SingleStyledText('Queries are delimited by a semic...')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('raw_queries – command string inp...')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('raw_queries – command string inp...')
                        MixedStyledText('raw_queries', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('raw_queries')
                        SingleStyledText(' – ')
                        SingleStyledText('command string input')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.parseQueries:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('list of queries to execute')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('list of queries to execute')
                        SingleStyledText('list of queries to execute')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('query ( query_string ) ', id='%storage_format#minisql.MiniDB.query')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('query ( query_string ) ')
                  MixedStyledText('query', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('query')
                  MixedStyledText(' ( query_string ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:None <desc_parameterlist>
                    MixedStyledText(' ( query_string')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('query_string', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('query_string', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('query_string')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Interface to query the database')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Interface to query the database')
                  SingleStyledText('Interface to query the database')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('query_string – queries to run')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('query_string – queries to run')
                        MixedStyledText('query_string', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('query_string')
                        SingleStyledText(' – ')
                        SingleStyledText('queries to run')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.query:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('True if they succeed, false if t...')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('True if they succeed, false if t...')
                        SingleStyledText('True if they succeed, false if t...')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('recordExists ( name ) ', id='%storage_format#minisql.MiniDB.recordExists')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('recordExists ( name ) ')
                  MixedStyledText('recordExists', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('recordExists')
                  MixedStyledText(' ( name ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:None <desc_parameterlist>
                    MixedStyledText(' ( name')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('name', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('name', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('name')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Check if database record exists')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Check if database record exists')
                  SingleStyledText('Check if database record exists')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('name (str) – record name')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('name (str) – record name')
                        MixedStyledText('name', style='literal strong')   None:None <literal_strong>
                             > (0,0,1,0,1) literal strong
                          SingleStyledText('name')
                        SingleStyledText(' (')
                        AnnotatedText('str', style='external link')   None:None <reference>
                             > (0,0,1,0,1) external hyperlink
                          MixedStyledText('str')
                            MixedStyledText('str', style='literal emphasis')   None:None <literal_emphasis>
                                 > (0,0,1,0,1) literal emphasis
                              SingleStyledText('str')
                        SingleStyledText(')')
                        SingleStyledText(' – ')
                        SingleStyledText('record name')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.recordExists:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('True | False')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('True | False')
                        SingleStyledText('True | False')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('updateRecord ( name, a1=None, a2...', id='%storage_format#minisql.MiniDB.updateRecord')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('updateRecord ( name, a1=None, a2...')
                  MixedStyledText('updateRecord', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('updateRecord')
                  MixedStyledText(' ( name, a1=None, a2=None, a3=No...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:None <desc_parameterlist>
                    MixedStyledText(' ( name, a1=None, a2=None, a3=No...')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('name, a1=None, a2=None, a3=None,...', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('name', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('name')
                        SingleStyledText(', ')
                        MixedStyledText('a1=None', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a1=None')
                        SingleStyledText(', ')
                        MixedStyledText('a2=None', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a2=None')
                        SingleStyledText(', ')
                        MixedStyledText('a3=None', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a3=None')
                        SingleStyledText(', ')
                        MixedStyledText('a4=None', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('a4=None')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Update a record in the database')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Update a record in the database')
                  SingleStyledText('Update a record in the database')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    List(style='bulleted')   None:None <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('name (str) – record name')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('name (str) – record name')
                              MixedStyledText('name', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('name')
                              SingleStyledText(' (')
                              AnnotatedText('str', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('str')
                                  MixedStyledText('str', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('str')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('record name')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a1 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a1 (int) – field data')
                              MixedStyledText('a1', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a1')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a2 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a2 (int) – field data')
                              MixedStyledText('a2', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a2')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a3 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a3 (int) – field data')
                              MixedStyledText('a3', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a3')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('a4 (int) – field data')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('a4 (int) – field data')
                              MixedStyledText('a4', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('a4')
                              SingleStyledText(' (')
                              AnnotatedText('int', style='external link')   None:None <reference>
                                   > (0,0,1,0,1) external hyperlink
                                MixedStyledText('int')
                                  MixedStyledText('int', style='literal emphasis')   None:None <literal_emphasis>
                                       > (0,0,1,0,1) literal emphasis
                                    SingleStyledText('int')
                              SingleStyledText(')')
                              SingleStyledText(' – ')
                              SingleStyledText('field data')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniDB.updateRecord:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('True | False')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('True | False')
                        SingleStyledText('True | False')
      LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('class minisql.MiniShell', id='%storage_format#minisql.MiniShell')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell:None <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('class minisql.MiniShell')
              MixedStyledText('class ', style='annotation')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell:None <desc_annotation>
                   > (0,0,3,0,6) object annotation
                SingleStyledText('class ')
              MixedStyledText('minisql.', style='additional name part')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell:None <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('minisql.')
              MixedStyledText('MiniShell', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell:None <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('MiniShell')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell:None <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('Simple shell-like interpreter fo...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell:1 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Simple shell-like interpreter fo...')
              SingleStyledText('Simple shell-like interpreter fo...')
          LabeledFlowable(style='object description')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.close:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('close (  ) ', id='%storage_format#minisql.MiniShell.close')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.close:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('close (  ) ')
                  MixedStyledText('close', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.close:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('close')
                  MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.close:None <desc_parameterlist>
                    MixedStyledText(' ( ')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.close:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Close database connection and cl...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.close:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Close database connection and cl...')
                  SingleStyledText('Close database connection and cl...')
          LabeledFlowable(style='object description')   None:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('complete ( text, state ) ', id='%storage_format#minisql.MiniShell.complete')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('complete ( text, state ) ')
                  MixedStyledText('complete', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('complete')
                  MixedStyledText(' ( text, state ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:None <desc_parameterlist>
                    MixedStyledText(' ( text, state')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('text, state', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                        MixedStyledText('text', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('text')
                        SingleStyledText(', ')
                        MixedStyledText('state', style='parameter')   None:None <desc_parameter>
                             > (0,0,3,0,6) object parameter
                          SingleStyledText('state')
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Find all possible commands to co...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Find all possible commands to co...')
                  SingleStyledText('Find all possible commands to co...')
              DefinitionList(style='field list')   None:None <field_list>
                   > (0,0,1,0,2) field list
                     (0,0,0,0,2) definition list
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Parameters', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:0 <field_name>
                      SingleStyledText('Parameters')
                  StaticGroupedFlowables()   None:None <field_body>
                    List(style='bulleted')   None:None <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('text – ')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('text – ')
                              MixedStyledText('text', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('text')
                              SingleStyledText(' – ')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('state – ')   None:None <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('state – ')
                              MixedStyledText('state', style='literal strong')   None:None <literal_strong>
                                   > (0,0,1,0,1) literal strong
                                SingleStyledText('state')
                              SingleStyledText(' – ')
                LabeledFlowable()   None:None <field>
                     > (0,0,1,0,4) field list item
                       (0,0,0,0,4) definition list item
                  Paragraph('Returns', style='field name')
                       > (0,0,2,0,6) field name
                         (0,0,0,0,2) body
                    MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.complete:0 <field_name>
                      SingleStyledText('Returns')
                  StaticGroupedFlowables()   None:None <field_body>
                    Paragraph('')   None:None <paragraph>
                         > (0,0,0,0,2) body
                      MixedStyledText('')
          LabeledFlowable(style='object description')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:None <desc>
               > (0,0,1,0,2) object description
            StaticGroupedFlowables(style='signatures')
                 > (0,0,2,0,3) object signatures
              Paragraph('start (  ) ', id='%storage_format#minisql.MiniShell.start')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:None <desc_signature>
                   > (0,0,2,0,5) object signature
                     (0,0,0,0,2) body
                MixedStyledText('start (  ) ')
                  MixedStyledText('start', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:None <desc_name>
                       > (0,0,3,0,6) object name
                    SingleStyledText('start')
                  MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:None <desc_parameterlist>
                    MixedStyledText(' ( ')
                      SingleStyledText(' ( ', style='parentheses')
                           > (0,0,3,0,6) object parentheses
                      MixedStyledText('', style='parameter list')
                           > (0,0,3,0,6) object parameter list
                    SingleStyledText(' ) ', style='parentheses')
                         > (0,0,3,0,6) object parentheses
            StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:None <desc_content>
                 > (0,0,2,0,3) object description content
              Paragraph('Start the shell command interpre...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:1 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Start the shell command interpre...')
                  SingleStyledText('Start the shell command interpre...')
              Paragraph('Accept commands until user quits...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.MiniShell.start:3 <paragraph>
                   > (0,0,2,0,5) object description content paragraph
                     (0,0,0,0,2) body
                MixedStyledText('Accept commands until user quits...')
                  SingleStyledText('Accept commands until user quits...')
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('20		Chapter 3.  Test Queries')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('20		Chapter 3.  Test Queries')
      Field('20')
        SingleStyledText('20')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('5')
      SingleStyledText('.  ')
      Field('Test Queries')
        SingleStyledText('miniSQL module')
---------------------------------- page 21 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) Section(id='%storage_format#minisql-module')   /home/anon/projects/minisql/docs/source/index.rst:20 <section>
         > (0,0,0,1,2) chapter
      LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('minisql.main (  ) ', id='%storage_format#minisql.main')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:None <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('minisql.main (  ) ')
              MixedStyledText('minisql.', style='additional name part')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:None <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('minisql.')
              MixedStyledText('main', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:None <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('main')
              MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:None <desc_parameterlist>
                MixedStyledText(' ( ')
                  SingleStyledText(' ( ', style='parentheses')
                       > (0,0,3,0,6) object parentheses
                  MixedStyledText('', style='parameter list')
                       > (0,0,3,0,6) object parameter list
                SingleStyledText(' ) ', style='parentheses')
                     > (0,0,3,0,6) object parentheses
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:None <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('Parse command line arguments and...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:1 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Parse command line arguments and...')
              SingleStyledText('Parse command line arguments and...')
          DefinitionList(style='field list')   None:None <field_list>
               > (0,0,1,0,2) field list
                 (0,0,0,0,2) definition list
            LabeledFlowable()   None:None <field>
                 > (0,0,1,0,4) field list item
                   (0,0,0,0,4) definition list item
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name
                     (0,0,0,0,2) body
                MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.main:0 <field_name>
                  SingleStyledText('Returns')
              StaticGroupedFlowables()   None:None <field_body>
                Paragraph('0 on success, 1 on failure')   None:None <paragraph>
                     > (0,0,0,0,2) body
                  MixedStyledText('0 on success, 1 on failure')
                    SingleStyledText('0 on success, 1 on failure')
      LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('minisql.printTable ( headers, da...', id='%storage_format#minisql.printTable')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:None <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('minisql.printTable ( headers, da...')
              MixedStyledText('minisql.', style='additional name part')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:None <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('minisql.')
              MixedStyledText('printTable', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:None <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('printTable')
              MixedStyledText(' ( headers, data, num_rows=None,...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:None <desc_parameterlist>
                MixedStyledText(' ( headers, data, num_rows=None,...')
                  SingleStyledText(' ( ', style='parentheses')
                       > (0,0,3,0,6) object parentheses
                  MixedStyledText('headers, data, num_rows=None, fm...', style='parameter list')
                       > (0,0,3,0,6) object parameter list
                    MixedStyledText('headers', style='parameter')   None:None <desc_parameter>
                         > (0,0,3,0,6) object parameter
                      SingleStyledText('headers')
                    SingleStyledText(', ')
                    MixedStyledText('data', style='parameter')   None:None <desc_parameter>
                         > (0,0,3,0,6) object parameter
                      SingleStyledText('data')
                    SingleStyledText(', ')
                    MixedStyledText('num_rows=None', style='parameter')   None:None <desc_parameter>
                         > (0,0,3,0,6) object parameter
                      SingleStyledText('num_rows=None')
                    SingleStyledText(', ')
                    MixedStyledText('fmt='block'', style='parameter')   None:None <desc_parameter>
                         > (0,0,3,0,6) object parameter
                      SingleStyledText('fmt='block'')
                SingleStyledText(' ) ', style='parentheses')
                     > (0,0,3,0,6) object parentheses
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:None <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('Print in table format')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:1 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Print in table format')
              SingleStyledText('Print in table format')
          DefinitionList(style='field list')   None:None <field_list>
               > (0,0,1,0,2) field list
                 (0,0,0,0,2) definition list
            LabeledFlowable()   None:None <field>
                 > (0,0,1,0,4) field list item
                   (0,0,0,0,4) definition list item
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name
                     (0,0,0,0,2) body
                MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.printTable:0 <field_name>
                  SingleStyledText('Parameters')
              StaticGroupedFlowables()   None:None <field_body>
                List(style='bulleted')   None:None <bullet_list>
                     > (0,0,1,0,2) bulleted list
                  ListItem()
                       x (0,0,1,0,4) bulleted list item
                       > fallback to default style
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label
                           (0,0,0,0,2) list item label
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()   None:None <list_item>
                         > (0,0,0,0,3) list item body
                      Paragraph('headers – list of strings')   None:None <paragraph>
                           > (0,0,0,0,5) list item paragraph
                             (0,0,0,0,2) body
                        MixedStyledText('headers – list of strings')
                          MixedStyledText('headers', style='literal strong')   None:None <literal_strong>
                               > (0,0,1,0,1) literal strong
                            SingleStyledText('headers')
                          SingleStyledText(' – ')
                          SingleStyledText('list of strings')
                  ListItem()
                       x (0,0,1,0,4) bulleted list item
                       > fallback to default style
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label
                           (0,0,0,0,2) list item label
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()   None:None <list_item>
                         > (0,0,0,0,3) list item body
                      Paragraph('data – list of lists (rows)')   None:None <paragraph>
                           > (0,0,0,0,5) list item paragraph
                             (0,0,0,0,2) body
                        MixedStyledText('data – list of lists (rows)')
                          MixedStyledText('data', style='literal strong')   None:None <literal_strong>
                               > (0,0,1,0,1) literal strong
                            SingleStyledText('data')
                          SingleStyledText(' – ')
                          SingleStyledText('list of lists (rows)')
                  ListItem()
                       x (0,0,1,0,4) bulleted list item
                       > fallback to default style
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label
                           (0,0,0,0,2) list item label
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()   None:None <list_item>
                         > (0,0,0,0,3) list item body
                      Paragraph('num_rows – int')   None:None <paragraph>
                           > (0,0,0,0,5) list item paragraph
                             (0,0,0,0,2) body
                        MixedStyledText('num_rows – int')
                          MixedStyledText('num_rows', style='literal strong')   None:None <literal_strong>
                               > (0,0,1,0,1) literal strong
                            SingleStyledText('num_rows')
                          SingleStyledText(' – ')
                          SingleStyledText('int')
                  ListItem()
                       x (0,0,1,0,4) bulleted list item
                       > fallback to default style
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label
                           (0,0,0,0,2) list item label
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()   None:None <list_item>
                         > (0,0,0,0,3) list item body
                      Paragraph('fmt – str format type')   None:None <paragraph>
                           > (0,0,0,0,5) list item paragraph
                             (0,0,0,0,2) body
                        MixedStyledText('fmt – str format type')
                          MixedStyledText('fmt', style='literal strong')   None:None <literal_strong>
                               > (0,0,1,0,1) literal strong
                            SingleStyledText('fmt')
                          SingleStyledText(' – ')
                          SingleStyledText('str format type')
      LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('minisql.supportsColor ( stream )...', id='%storage_format#minisql.supportsColor')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:None <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('minisql.supportsColor ( stream )...')
              MixedStyledText('minisql.', style='additional name part')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:None <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('minisql.')
              MixedStyledText('supportsColor', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:None <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('supportsColor')
              MixedStyledText(' ( stream ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:None <desc_parameterlist>
                MixedStyledText(' ( stream')
                  SingleStyledText(' ( ', style='parentheses')
                       > (0,0,3,0,6) object parentheses
                  MixedStyledText('stream', style='parameter list')
                       > (0,0,3,0,6) object parameter list
                    MixedStyledText('stream', style='parameter')   None:None <desc_parameter>
                         > (0,0,3,0,6) object parameter
                      SingleStyledText('stream')
                SingleStyledText(' ) ', style='parentheses')
                     > (0,0,3,0,6) object parentheses
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:None <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('Check if terminal supports ASCII...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:1 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Check if terminal supports ASCII...')
              SingleStyledText('Check if terminal supports ASCII...')
          Paragraph('Modified method from Python cook...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:3 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Modified method from Python cook...')
              SingleStyledText('Modified method from Python cook...')
          DefinitionList(style='field list')   None:None <field_list>
               > (0,0,1,0,2) field list
                 (0,0,0,0,2) definition list
            LabeledFlowable()   None:None <field>
                 > (0,0,1,0,4) field list item
                   (0,0,0,0,4) definition list item
              Paragraph('Parameters', style='field name')
                   > (0,0,2,0,6) field name
                     (0,0,0,0,2) body
                MixedStyledText('Parameters')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:0 <field_name>
                  SingleStyledText('Parameters')
              StaticGroupedFlowables()   None:None <field_body>
                Paragraph('stream – file stream to check')   None:None <paragraph>
                     > (0,0,0,0,2) body
                  MixedStyledText('stream – file stream to check')
                    MixedStyledText('stream', style='literal strong')   None:None <literal_strong>
                         > (0,0,1,0,1) literal strong
                      SingleStyledText('stream')
                    SingleStyledText(' – ')
                    SingleStyledText('file stream to check')
            LabeledFlowable()   None:None <field>
                 > (0,0,1,0,4) field list item
                   (0,0,0,0,4) definition list item
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name
                     (0,0,0,0,2) body
                MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.supportsColor:0 <field_name>
                  SingleStyledText('Returns')
              StaticGroupedFlowables()   None:None <field_body>
                Paragraph('True == supported, False == not ...')   None:None <paragraph>
                     > (0,0,0,0,2) body
                  MixedStyledText('True == supported, False == not ...')
                    SingleStyledText('True == supported, False == not ...')
      LabeledFlowable(style='object description')   None:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('minisql.validateStdinReadable ( ...', id='%storage_format#minisql.validateStdinReadable')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:None <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('minisql.validateStdinReadable ( ...')
              MixedStyledText('minisql.', style='additional name part')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:None <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('minisql.')
              MixedStyledText('validateStdinReadable', style='main object name')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:None <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('validateStdinReadable')
              MixedStyledText(' (  ) ')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:None <desc_parameterlist>
                MixedStyledText(' ( ')
                  SingleStyledText(' ( ', style='parentheses')
                       > (0,0,3,0,6) object parentheses
                  MixedStyledText('', style='parameter list')
                       > (0,0,3,0,6) object parameter list
                SingleStyledText(' ) ', style='parentheses')
                     > (0,0,3,0,6) object parentheses
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:None <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('Check if stdin has been redirect...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:1 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Check if stdin has been redirect...')
              SingleStyledText('Check if stdin has been redirect...')
          Paragraph('See the following table for supp...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:4 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('See the following table for supp...')
              SingleStyledText('See the following table for supp...')
          Paragraph('Note that as of python v3.3 syml...')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:6 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('Note that as of python v3.3 syml...')
              SingleStyledText('Note that as of python v3.3 syml...')
          Table()   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:None <table>
               > (0,0,0,0,2) table
            TableHead()
              TableRow()
                TableCell()   None:None <entry>
                     x (0,0,0,0,8) table head cell
                     > (0,0,0,0,7) table cell
                  Paragraph('Stdin Type')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:9 <paragraph>
                       > (0,0,0,0,10) table head cell paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Stdin Type')
                      SingleStyledText('Stdin Type')
                  TableCellBackground()
                TableCell()   None:None <entry>
                     x (0,0,0,0,8) table head cell
                     > (0,0,0,0,7) table cell
                  Paragraph('Supported')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:9 <paragraph>
                       > (0,0,0,0,10) table head cell paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Supported')
                      SingleStyledText('Supported')
                  TableCellBackground()
                TableCell()   None:None <entry>
                     x (0,0,0,0,8) table head cell
                     > (0,0,0,0,7) table cell
                  Paragraph('Program Context')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:9 <paragraph>
                       > (0,0,0,0,10) table head cell paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Program Context')
                      SingleStyledText('Program Context')
                  TableCellBackground()
            TableBody()
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('directory')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:11 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('directory')
                      SingleStyledText('directory')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('no')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:11 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('no')
                      SingleStyledText('no')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('keyboard')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:13 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('keyboard')
                      SingleStyledText('keyboard')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('yes')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:13 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('yes')
                      SingleStyledText('yes')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('miniSQL shell')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:13 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('miniSQL shell')
                      SingleStyledText('miniSQL shell')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('storage')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:15 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('storage')
                      SingleStyledText('storage')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('no')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:15 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('no')
                      SingleStyledText('no')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('file')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:17 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('file')
                      SingleStyledText('file')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('yes')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:17 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('yes')
                      SingleStyledText('yes')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('miniSQL cmd')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:17 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('miniSQL cmd')
                      SingleStyledText('miniSQL cmd')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('symlink')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:19 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('symlink')
                      SingleStyledText('symlink')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('no')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:19 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('no')
                      SingleStyledText('no')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('pipe')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:21 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('pipe')
                      SingleStyledText('pipe')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('yes')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:21 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('yes')
                      SingleStyledText('yes')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('miniSQL cmd')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:21 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('miniSQL cmd')
                      SingleStyledText('miniSQL cmd')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on even row
                       > fallback to default style
              TableRow()
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('socket')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:23 <paragraph>
                       > (0,0,0,1,8) table first column paragraph
                         (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('socket')
                      SingleStyledText('socket')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  Paragraph('no')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:23 <paragraph>
                       > (0,0,0,0,9) table body cell paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('no')
                      SingleStyledText('no')
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
                TableCell()   None:None <entry>
                     > (0,0,0,0,7) table cell
                  TableCellBackground()
                       x (0,0,0,2,8) table body cell background on odd row
                       > fallback to default style
          DefinitionList(style='field list')   None:None <field_list>
               > (0,0,1,0,2) field list
                 (0,0,0,0,2) definition list
            LabeledFlowable()   None:None <field>
                 > (0,0,1,0,4) field list item
                   (0,0,0,0,4) definition list item
              Paragraph('Returns', style='field name')
                   > (0,0,2,0,6) field name
                     (0,0,0,0,2) body
                MixedStyledText('Returns')   /home/anon/projects/minisql/minisql.py:docstring of minisql.validateStdinReadable:0 <field_name>
                  SingleStyledText('Returns')
              StaticGroupedFlowables()   None:None <field_body>
                Paragraph('not readable == -1, 0 == readabl...')   None:None <paragraph>
                     > (0,0,0,0,2) body
                  MixedStyledText('not readable == -1, 0 == readabl...')
                    SingleStyledText('not readable == -1, 0 == readabl...')
#### UpExpandingContainer('header')
  Header('		miniSQL Documentation, Release...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		miniSQL Documentation, Release...')
      Tab('	')
      Tab('	')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('3.4.  miniSQL Output		21')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('3.4.  miniSQL Output		21')
      Field('3.4')
        SingleStyledText('3.4')
      SingleStyledText('.  ')
      Field('miniSQL Output')
        SingleStyledText('miniSQL Output')
      Tab('	')
      Tab('	')
      Field('21')
        SingleStyledText('21')
---------------------------------- page 22 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('22		Chapter 3.  Test Queries')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('22		Chapter 3.  Test Queries')
      Field('22')
        SingleStyledText('22')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('5')
      SingleStyledText('.  ')
      Field('Test Queries')
        SingleStyledText('miniSQL module')
---------------------------------- page 23 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 3', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 3')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('3', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('6')
  Paragraph('Test Queries', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Test Queries')
      SingleStyledText('settings module')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    Section(id='%storage_format#settings-module')   /home/anon/projects/minisql/docs/source/index.rst:26 <section>
         > (0,0,0,1,2) chapter
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.MAJOR_RELEASE_NUMBER', id='%storage_format#settings.MAJOR_RELEASE_NUMBER')   /home/anon/projects/minisql/settings.py:docstring of settings:4 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.MAJOR_RELEASE_NUMBER')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:4 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('MAJOR_RELEASE_NUMBER', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:4 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('MAJOR_RELEASE_NUMBER')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:4 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('miniSQL major release version')   /home/anon/projects/minisql/settings.py:docstring of settings:3 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('miniSQL major release version')
              SingleStyledText('miniSQL major release version')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.MINOR_RELEASE_NUMBER', id='%storage_format#settings.MINOR_RELEASE_NUMBER')   /home/anon/projects/minisql/settings.py:docstring of settings:8 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.MINOR_RELEASE_NUMBER')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:8 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('MINOR_RELEASE_NUMBER', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:8 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('MINOR_RELEASE_NUMBER')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:8 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('miniSQL minor release version')   /home/anon/projects/minisql/settings.py:docstring of settings:7 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('miniSQL minor release version')
              SingleStyledText('miniSQL minor release version')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.PATCH_RELEASE_NUMBER', id='%storage_format#settings.PATCH_RELEASE_NUMBER')   /home/anon/projects/minisql/settings.py:docstring of settings:12 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.PATCH_RELEASE_NUMBER')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:12 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('PATCH_RELEASE_NUMBER', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:12 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('PATCH_RELEASE_NUMBER')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:12 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('miniSQL patch release version')   /home/anon/projects/minisql/settings.py:docstring of settings:11 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('miniSQL patch release version')
              SingleStyledText('miniSQL patch release version')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.LOGO', id='%storage_format#settings.LOGO')   /home/anon/projects/minisql/settings.py:docstring of settings:16 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.LOGO')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:16 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('LOGO', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:16 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('LOGO')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:16 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('miniSQL ascii logo')   /home/anon/projects/minisql/settings.py:docstring of settings:15 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('miniSQL ascii logo')
              SingleStyledText('miniSQL ascii logo')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.DB_STORAGE_FILE', id='%storage_format#settings.DB_STORAGE_FILE')   /home/anon/projects/minisql/settings.py:docstring of settings:20 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.DB_STORAGE_FILE')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:20 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('DB_STORAGE_FILE', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:20 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('DB_STORAGE_FILE')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:20 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('where database records stored')   /home/anon/projects/minisql/settings.py:docstring of settings:19 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('where database records stored')
              SingleStyledText('where database records stored')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.DB_ALLOWED_FIELDS', id='%storage_format#settings.DB_ALLOWED_FIELDS')   /home/anon/projects/minisql/settings.py:docstring of settings:24 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.DB_ALLOWED_FIELDS')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:24 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('DB_ALLOWED_FIELDS', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:24 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('DB_ALLOWED_FIELDS')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:24 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('allowed field names for a databa...')   /home/anon/projects/minisql/settings.py:docstring of settings:23 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('allowed field names for a databa...')
              SingleStyledText('allowed field names for a databa...')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.DB_RECORD_SIZE', id='%storage_format#settings.DB_RECORD_SIZE')   /home/anon/projects/minisql/settings.py:docstring of settings:28 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.DB_RECORD_SIZE')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:28 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('DB_RECORD_SIZE', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:28 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('DB_RECORD_SIZE')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:28 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('number of bytes per record')   /home/anon/projects/minisql/settings.py:docstring of settings:27 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('number of bytes per record')
              SingleStyledText('number of bytes per record')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.DB_RECORD_NAME_SIZE', id='%storage_format#settings.DB_RECORD_NAME_SIZE')   /home/anon/projects/minisql/settings.py:docstring of settings:32 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.DB_RECORD_NAME_SIZE')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:32 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('DB_RECORD_NAME_SIZE', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:32 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('DB_RECORD_NAME_SIZE')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:32 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('size of field name in bytes')   /home/anon/projects/minisql/settings.py:docstring of settings:31 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('size of field name in bytes')
              SingleStyledText('size of field name in bytes')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.DB_FIELD_DATA_SIZE', id='%storage_format#settings.DB_FIELD_DATA_SIZE')   /home/anon/projects/minisql/settings.py:docstring of settings:36 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.DB_FIELD_DATA_SIZE')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:36 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('DB_FIELD_DATA_SIZE', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:36 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('DB_FIELD_DATA_SIZE')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:36 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('size of field data in bytes')   /home/anon/projects/minisql/settings.py:docstring of settings:35 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('size of field data in bytes')
              SingleStyledText('size of field data in bytes')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.DB_ENCODING', id='%storage_format#settings.DB_ENCODING')   /home/anon/projects/minisql/settings.py:docstring of settings:40 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.DB_ENCODING')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:40 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('DB_ENCODING', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:40 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('DB_ENCODING')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:40 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('encoding used for strings')   /home/anon/projects/minisql/settings.py:docstring of settings:39 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('encoding used for strings')
              SingleStyledText('encoding used for strings')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.SHELL_INTRO', id='%storage_format#settings.SHELL_INTRO')   /home/anon/projects/minisql/settings.py:docstring of settings:44 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.SHELL_INTRO')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:44 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('SHELL_INTRO', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:44 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('SHELL_INTRO')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:44 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('intro message displayed in minis...')   /home/anon/projects/minisql/settings.py:docstring of settings:43 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('intro message displayed in minis...')
              SingleStyledText('intro message displayed in minis...')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.SHELL_PROMPT', id='%storage_format#settings.SHELL_PROMPT')   /home/anon/projects/minisql/settings.py:docstring of settings:48 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.SHELL_PROMPT')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:48 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('SHELL_PROMPT', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:48 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('SHELL_PROMPT')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:48 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('user prompt displayed in minisql...')   /home/anon/projects/minisql/settings.py:docstring of settings:47 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('user prompt displayed in minisql...')
              SingleStyledText('user prompt displayed in minisql...')
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.SHELL_HISTORY_FILE', id='%storage_format#settings.SHELL_HISTORY_FILE')   /home/anon/projects/minisql/settings.py:docstring of settings:52 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.SHELL_HISTORY_FILE')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:52 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('SHELL_HISTORY_FILE', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:52 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('SHELL_HISTORY_FILE')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:52 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('stores minisql shell commands fo...')   /home/anon/projects/minisql/settings.py:docstring of settings:51 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('stores minisql shell commands fo...')
              SingleStyledText('stores minisql shell commands fo...')
#### DownExpandingContainer('footer')
  Footer('		23')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		23')
      Tab('	')
      Tab('	')
      Field('23')
        SingleStyledText('23')
---------------------------------- page 24 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) Section(id='%storage_format#settings-module')   /home/anon/projects/minisql/docs/source/index.rst:26 <section>
         > (0,0,0,1,2) chapter
      LabeledFlowable(style='object description')   /home/anon/projects/minisql/settings.py:docstring of settings:None <desc>
           > (0,0,1,0,2) object description
        StaticGroupedFlowables(style='signatures')
             > (0,0,2,0,3) object signatures
          Paragraph('settings.SHELL_HISTORY_LENGTH', id='%storage_format#settings.SHELL_HISTORY_LENGTH')   /home/anon/projects/minisql/settings.py:docstring of settings:56 <desc_signature>
               > (0,0,2,0,5) object signature
                 (0,0,0,0,2) body
            MixedStyledText('settings.SHELL_HISTORY_LENGTH')
              MixedStyledText('settings.', style='additional name part')   /home/anon/projects/minisql/settings.py:docstring of settings:56 <desc_addname>
                   > (0,0,3,0,6) additional name part
                SingleStyledText('settings.')
              MixedStyledText('SHELL_HISTORY_LENGTH', style='main object name')   /home/anon/projects/minisql/settings.py:docstring of settings:56 <desc_name>
                   > (0,0,3,0,6) object name
                SingleStyledText('SHELL_HISTORY_LENGTH')
        StaticGroupedFlowables(style='content')   /home/anon/projects/minisql/settings.py:docstring of settings:56 <desc_content>
             > (0,0,2,0,3) object description content
          Paragraph('number of lines of history to st...')   /home/anon/projects/minisql/settings.py:docstring of settings:55 <paragraph>
               > (0,0,2,0,5) object description content paragraph
                 (0,0,0,0,2) body
            MixedStyledText('number of lines of history to st...')
              SingleStyledText('number of lines of history to st...')
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('24		Chapter 3.  Test Queries')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('24		Chapter 3.  Test Queries')
      Field('24')
        SingleStyledText('24')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('6')
      SingleStyledText('.  ')
      Field('Test Queries')
        SingleStyledText('settings module')
---------------------------------- page 25 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 7', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 7')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('7', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('7')
  Paragraph('storage specification', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('storage specification')
      SingleStyledText('storage specification')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    Section(id='%storage_format#storage-specification')   /home/anon/projects/minisql/docs/source/index.rst:35 <section>
         > (0,0,0,1,2) chapter
      Paragraph('record storage format:')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:2 <paragraph>
           > (0,0,0,0,2) body
        MixedStyledText('record storage format:')
          SingleStyledText('record storage format:')
      CodeBlock('<record_name>\t<a1>\t<a2>\t<a3>\...')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:46 <literal_block>
           > (1,0,0,0,2) code block
             (0,0,0,0,1) body
        Token('<', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('record_name', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('>', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('\', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
        Token('t', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('<', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('a1', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('>', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('\', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
        Token('t', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('<', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('a2', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('>', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('\', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
        Token('t', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('<', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('a3', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('>', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('\', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
        Token('t', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('<', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('a4', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('>', type=Token.Operator)
             > (0,0,0,1,2) (pygments)Token.Operator
        Token('\', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
        Token('r', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('\', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
        Token('n', type=Token.Name)
             > (0,0,0,1,2) (pygments)Token.Name
        Token('\n', type=Token.Text)
             > (0,0,0,1,2) (pygments)Token.Text
      Paragraph('miniSQL data constraints:')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:7 <paragraph>
           > (0,0,0,0,2) body
        MixedStyledText('miniSQL data constraints:')
          SingleStyledText('miniSQL data constraints:')
      Table()   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:None <table>
           > (0,0,0,0,2) table
        TableHead()
          TableRow()
            TableCell()   None:None <entry>
                 x (0,0,0,0,8) table head cell
                 > (0,0,0,0,7) table cell
              Paragraph('storage type')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:10 <paragraph>
                   > (0,0,0,0,10) table head cell paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('storage type')
                  SingleStyledText('storage type')
              TableCellBackground()
            TableCell()   None:None <entry>
                 x (0,0,0,0,8) table head cell
                 > (0,0,0,0,7) table cell
              Paragraph('data type')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:10 <paragraph>
                   > (0,0,0,0,10) table head cell paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('data type')
                  SingleStyledText('data type')
              TableCellBackground()
            TableCell()   None:None <entry>
                 x (0,0,0,0,8) table head cell
                 > (0,0,0,0,7) table cell
              Paragraph('size')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:10 <paragraph>
                   > (0,0,0,0,10) table head cell paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('size')
                  SingleStyledText('size')
              TableCellBackground()
        TableBody()
          TableRow()
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('field name')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:12 <paragraph>
                   > (0,0,0,1,8) table first column paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('field name')
                  SingleStyledText('field name')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('string')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:12 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('string')
                  SingleStyledText('string')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('18 B')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:12 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('18 B')
                  SingleStyledText('18 B')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
          TableRow()
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('field data')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:14 <paragraph>
                   > (0,0,0,1,8) table first column paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('field data')
                  SingleStyledText('field data')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on even row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('unsigned integer')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:14 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('unsigned integer')
                  SingleStyledText('unsigned integer')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on even row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('4 B * 4')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:14 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('4 B * 4')
                  SingleStyledText('4 B * 4')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on even row
                   > fallback to default style
          TableRow()
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('tab char')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:16 <paragraph>
                   > (0,0,0,1,8) table first column paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('tab char')
                  SingleStyledText('tab char')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('char')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:16 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('char')
                  SingleStyledText('char')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('1 B * 4')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:16 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('1 B * 4')
                  SingleStyledText('1 B * 4')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
          TableRow()
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('CRLF string')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:18 <paragraph>
                   > (0,0,0,1,8) table first column paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('CRLF string')
                  SingleStyledText('CRLF string')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on even row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('char')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:18 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('char')
                  SingleStyledText('char')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on even row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('2 B')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:18 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('2 B')
                  SingleStyledText('2 B')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on even row
                   > fallback to default style
          TableRow()
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('total record size')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:20 <paragraph>
                   > (0,0,0,1,8) table first column paragraph
                     (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('total record size')
                  SingleStyledText('total record size')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
            TableCell()   None:None <entry>
                 > (0,0,0,0,7) table cell
              Paragraph('40 B')   source/storage_format.rst <included from /home/anon/projects/minisql/docs/source/index.rst>:20 <paragraph>
                   > (0,0,0,0,9) table body cell paragraph
                     (0,0,0,0,2) body
                MixedStyledText('40 B')
                  SingleStyledText('40 B')
              TableCellBackground()
                   x (0,0,0,2,8) table body cell background on odd row
                   > fallback to default style
#### DownExpandingContainer('footer')
  Footer('		25')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		25')
      Tab('	')
      Tab('	')
      Field('25')
        SingleStyledText('25')
---------------------------------- page 26 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('26		Chapter 6.  settings module')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('26		Chapter 6.  settings module')
      Field('26')
        SingleStyledText('26')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('6')
        SingleStyledText('6')
      SingleStyledText('.  ')
      Field('settings module')
        SingleStyledText('settings module')
---------------------------------- page 27 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 8', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 8')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('8', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('8')
  Paragraph('Indices and tables', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Indices and tables')
      SingleStyledText('Indices and tables')
#### ChainedContainer('column1')
  (continued) DocumentTree()
    Section(id='%storage_format#indices-and-tables')   /home/anon/projects/minisql/docs/source/index.rst:42 <section>
         > (0,0,0,1,2) chapter
      List(style='bulleted')   /home/anon/projects/minisql/docs/source/index.rst:44 <bullet_list>
           > (0,0,1,0,2) bulleted list
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/index.rst:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('Index')   /home/anon/projects/minisql/docs/source/index.rst:44 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('Index')
                AnnotatedText('Index', style='internal link')   None:None <reference>
                     > (0,0,1,0,1) internal hyperlink
                  MixedStyledText('Index')
                    MixedStyledText('Index')   None:None <inline>
                      SingleStyledText('Index')
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/index.rst:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('Module Index')   /home/anon/projects/minisql/docs/source/index.rst:45 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('Module Index')
                AnnotatedText('Module Index', style='internal link')   None:None <reference>
                     > (0,0,1,0,1) internal hyperlink
                  MixedStyledText('Module Index')
                    MixedStyledText('Module Index')   None:None <inline>
                      SingleStyledText('Module Index')
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   /home/anon/projects/minisql/docs/source/index.rst:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('Search Page')   /home/anon/projects/minisql/docs/source/index.rst:46 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('Search Page')
                AnnotatedText('Search Page', style='internal link')   None:None <reference>
                     > (0,0,1,0,1) internal hyperlink
                  MixedStyledText('Search Page')
                    MixedStyledText('Search Page')   None:None <inline>
                      SingleStyledText('Search Page')
#### DownExpandingContainer('footer')
  Footer('		27')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		27')
      Tab('	')
      Tab('	')
      Field('27')
        SingleStyledText('27')
---------------------------------- page 29 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('Python Module Index', style='front matter section title')
       > (0,0,1,0,2) front matter section title
         (0,0,0,0,2) body
    Field('Python Module Index')
      SingleStyledText('Python Module Index')
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    IndexSection()
         > (0,0,0,1,1) chapter
      IndexLabel('m')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('m')
      IndexEntry('minisql, 19')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('minisql, 19')
          SingleStyledText('minisql', style='domain')
               > (0,0,1,0,3) domain index entry name
          SingleStyledText(', ')
          Reference('19')
               > (0,0,0,1,1) linked reference
            SingleStyledText('19')
      IndexLabel('s')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('s')
      IndexEntry('settings, 23')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('settings, 23')
          SingleStyledText('settings', style='domain')
               > (0,0,1,0,3) domain index entry name
          SingleStyledText(', ')
          Reference('23')
               > (0,0,0,1,1) linked reference
            SingleStyledText('23')
#### DownExpandingContainer('footer')
  Footer('		29')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		29')
      Tab('	')
      Tab('	')
      Field('29')
        SingleStyledText('29')
---------------------------------- page 30 ----------------------------------
#### UpExpandingContainer('header')
  Header('miniSQL Documentation, Release 1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('miniSQL Documentation, Release 1...')
      Field('miniSQL Documentation')
        SingleStyledText('miniSQL Documentation')
      SingleStyledText(', ')
      Field('Release 1.0.0')
        SingleStyledText('Release 1.0.0')
#### DownExpandingContainer('footer')
  Footer('30		Python Module Index')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('30		Python Module Index')
      Field('30')
        SingleStyledText('30')
      Tab('	')
      Tab('	')
      Field('Python Module Index')
        SingleStyledText('Python Module Index')
---------------------------------- page 31 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('Index', style='front matter section title')
       > (0,0,1,0,2) front matter section title
         (0,0,0,0,2) body
    Field('Index')
      SingleStyledText('Index')
#### ChainedContainer('column1')
  IndexSection()
       > (0,0,0,1,1) chapter
    Index()   index
         > (0,0,0,0,2) index
      IndexLabel('C')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('C')
      IndexEntry('close() (minisql.MiniDB method),...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('close() (minisql.MiniDB method),...')
          SingleStyledText('close() (minisql.MiniDB method),...')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexEntry('close() (minisql.MiniShell metho...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('close() (minisql.MiniShell metho...')
          SingleStyledText('close() (minisql.MiniShell metho...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexEntry('complete() (minisql.MiniShell me...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('complete() (minisql.MiniShell me...')
          SingleStyledText('complete() (minisql.MiniShell me...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexEntry('createRecord() (minisql.MiniDB m...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('createRecord() (minisql.MiniDB m...')
          SingleStyledText('createRecord() (minisql.MiniDB m...')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexLabel('D')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('D')
      IndexEntry('DB_ALLOWED_FIELDS (in module set...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('DB_ALLOWED_FIELDS (in module set...')
          SingleStyledText('DB_ALLOWED_FIELDS (in module set...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('DB_ENCODING (in module settings)...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('DB_ENCODING (in module settings)...')
          SingleStyledText('DB_ENCODING (in module settings)...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('DB_FIELD_DATA_SIZE (in module se...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('DB_FIELD_DATA_SIZE (in module se...')
          SingleStyledText('DB_FIELD_DATA_SIZE (in module se...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('DB_RECORD_NAME_SIZE (in module s...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('DB_RECORD_NAME_SIZE (in module s...')
          SingleStyledText('DB_RECORD_NAME_SIZE (in module s...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('DB_RECORD_SIZE (in module settin...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('DB_RECORD_SIZE (in module settin...')
          SingleStyledText('DB_RECORD_SIZE (in module settin...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('DB_STORAGE_FILE (in module setti...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('DB_STORAGE_FILE (in module setti...')
          SingleStyledText('DB_STORAGE_FILE (in module setti...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('deleteRecord() (minisql.MiniDB m...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('deleteRecord() (minisql.MiniDB m...')
          SingleStyledText('deleteRecord() (minisql.MiniDB m...')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexEntry('deleteRecords() (minisql.MiniDB ...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('deleteRecords() (minisql.MiniDB ...')
          SingleStyledText('deleteRecords() (minisql.MiniDB ...')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexLabel('G')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('G')
      IndexEntry('getRecord() (minisql.MiniDB meth...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('getRecord() (minisql.MiniDB meth...')
          SingleStyledText('getRecord() (minisql.MiniDB meth...')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexEntry('getRecords() (minisql.MiniDB met...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('getRecords() (minisql.MiniDB met...')
          SingleStyledText('getRecords() (minisql.MiniDB met...')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexLabel('I')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('I')
      IndexEntry('interpretQueries() (minisql.Mini...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('interpretQueries() (minisql.Mini...')
          SingleStyledText('interpretQueries() (minisql.Mini...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexLabel('L')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('L')
      IndexEntry('LOGO (in module settings), 23')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('LOGO (in module settings), 23')
          SingleStyledText('LOGO (in module settings), ')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexLabel('M')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('M')
      IndexEntry('main() (in module minisql), 21')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('main() (in module minisql), 21')
          SingleStyledText('main() (in module minisql), ')
          MixedStyledText('21')
            Reference('21')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('21')
      IndexEntry('MAJOR_RELEASE_NUMBER (in module ...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('MAJOR_RELEASE_NUMBER (in module ...')
          SingleStyledText('MAJOR_RELEASE_NUMBER (in module ...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('MiniDB (class in minisql), 19')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('MiniDB (class in minisql), 19')
          SingleStyledText('MiniDB (class in minisql), ')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexEntry('MiniShell (class in minisql), 20')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('MiniShell (class in minisql), 20')
          SingleStyledText('MiniShell (class in minisql), ')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexEntry('minisql (module), 19')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('minisql (module), 19')
          SingleStyledText('minisql (module), ')
          MixedStyledText('19')
            Reference('19')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('19')
      IndexEntry('MINOR_RELEASE_NUMBER (in module ...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('MINOR_RELEASE_NUMBER (in module ...')
          SingleStyledText('MINOR_RELEASE_NUMBER (in module ...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
#### ChainedContainer('column2')
  (continued) IndexSection()
       > (0,0,0,1,1) chapter
    (continued) Index()   index
         > (0,0,0,0,2) index
      (continued) IndexEntry('MINOR_RELEASE_NUMBER (in module ...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
      IndexLabel('P')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('P')
      IndexEntry('parseQueries() (minisql.MiniDB m...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('parseQueries() (minisql.MiniDB m...')
          SingleStyledText('parseQueries() (minisql.MiniDB m...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexEntry('PATCH_RELEASE_NUMBER (in module ...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('PATCH_RELEASE_NUMBER (in module ...')
          SingleStyledText('PATCH_RELEASE_NUMBER (in module ...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('printTable() (in module minisql)...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('printTable() (in module minisql)...')
          SingleStyledText('printTable() (in module minisql)...')
          MixedStyledText('21')
            Reference('21')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('21')
      IndexLabel('Q')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('Q')
      IndexEntry('query() (minisql.MiniDB method),...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('query() (minisql.MiniDB method),...')
          SingleStyledText('query() (minisql.MiniDB method),...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexLabel('R')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('R')
      IndexEntry('recordExists() (minisql.MiniDB m...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('recordExists() (minisql.MiniDB m...')
          SingleStyledText('recordExists() (minisql.MiniDB m...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexLabel('S')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('S')
      IndexEntry('settings (module), 23')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('settings (module), 23')
          SingleStyledText('settings (module), ')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('SHELL_HISTORY_FILE (in module se...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('SHELL_HISTORY_FILE (in module se...')
          SingleStyledText('SHELL_HISTORY_FILE (in module se...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('SHELL_HISTORY_LENGTH (in module ...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('SHELL_HISTORY_LENGTH (in module ...')
          SingleStyledText('SHELL_HISTORY_LENGTH (in module ...')
          MixedStyledText('24')
            Reference('24')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('24')
      IndexEntry('SHELL_INTRO (in module settings)...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('SHELL_INTRO (in module settings)...')
          SingleStyledText('SHELL_INTRO (in module settings)...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('SHELL_PROMPT (in module settings...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('SHELL_PROMPT (in module settings...')
          SingleStyledText('SHELL_PROMPT (in module settings...')
          MixedStyledText('23')
            Reference('23')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('23')
      IndexEntry('start() (minisql.MiniShell metho...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('start() (minisql.MiniShell metho...')
          SingleStyledText('start() (minisql.MiniShell metho...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexEntry('supportsColor() (in module minis...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('supportsColor() (in module minis...')
          SingleStyledText('supportsColor() (in module minis...')
          MixedStyledText('21')
            Reference('21')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('21')
      IndexLabel('U')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('U')
      IndexEntry('updateRecord() (minisql.MiniDB m...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('updateRecord() (minisql.MiniDB m...')
          SingleStyledText('updateRecord() (minisql.MiniDB m...')
          MixedStyledText('20')
            Reference('20')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('20')
      IndexLabel('V')
           > (0,0,0,0,2) index section label
             (0,0,0,0,1) body
        SingleStyledText('V')
      IndexEntry('validateStdinReadable() (in modu...')
           > (0,0,0,1,2) level 1 index entry
             (0,0,0,0,1) body
        MixedStyledText('validateStdinReadable() (in modu...')
          SingleStyledText('validateStdinReadable() (in modu...')
          MixedStyledText('21')
            Reference('21')
                 > (0,0,0,1,1) linked reference
              SingleStyledText('21')
#### DownExpandingContainer('footer')
  Footer('		31')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		31')
      Tab('	')
      Tab('	')
      Field('31')
        SingleStyledText('31')
